// Debug Log Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏°‡∏≤

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log
function saveLog(message, data = null) {
    const timestamp = new Date().toISOString();
    const logEntry = {
        timestamp: timestamp,
        message: message,
        data: data,
        url: window.location.href,
        path: window.location.pathname
    };
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log ‡∏•‡∏á‡πÉ‡∏ô localStorage
    let logs = JSON.parse(localStorage.getItem('debugLogs') || '[]');
    logs.push(logEntry);
    
    // ‡πÄ‡∏Å‡πá‡∏ö log ‡πÄ‡∏â‡∏û‡∏≤‡∏∞ 100 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    if (logs.length > 100) {
        logs = logs.slice(-100);
    }
    
    localStorage.setItem('debugLogs', JSON.stringify(logs));
    
    // ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô console
    console.log(`üöÄ DEBUG LOG SCRIPT: ${message}`, data || '');
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á log ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
window.showAllLogs = function() {
    const logs = JSON.parse(localStorage.getItem('debugLogs') || '[]');
    console.log('üìã ALL DEBUG LOGS:');
    logs.forEach((log, index) => {
        console.log(`${index + 1}. [${log.timestamp}] ${log.message}`, log.data || '');
    });
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á log ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
window.clearAllLogs = function() {
    localStorage.removeItem('debugLogs');
    console.log('üßπ ALL DEBUG LOGS: ‡∏•‡πâ‡∏≤‡∏á log ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß');
};

saveLog('‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô');
saveLog('‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô', new Date().toISOString());
saveLog('URL ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô', window.location.href);
saveLog('Path ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô', window.location.pathname);

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡πà‡∏≤‡∏á‡πÜ
saveLog('‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏∞‡∏ö‡∏ö');
saveLog('isRedirecting', window.isRedirecting);
saveLog('hasCheckedAuth', window.hasCheckedAuth);
saveLog('isProtectingPage', window.isProtectingPage);

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
saveLog('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
const sessionUser = sessionStorage.getItem('user');
const localUser = localStorage.getItem('user');
saveLog('sessionStorage user', sessionUser ? '‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
saveLog('localStorage user', localUser ? '‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•' : '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');

if (sessionUser) {
    try {
        const user = JSON.parse(sessionUser);
        saveLog('sessionStorage user data', user);
    } catch (error) {
        saveLog('Error parsing sessionStorage user', error.message);
    }
}

if (localUser) {
    try {
        const user = JSON.parse(localUser);
        saveLog('localStorage user data', user);
    } catch (error) {
        saveLog('Error parsing localStorage user', error.message);
    }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase
saveLog('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase');
if (typeof firebase !== 'undefined') {
    saveLog('Firebase ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
    if (firebase.apps.length > 0) {
        saveLog('Firebase apps', firebase.apps.length);
    }
} else {
    saveLog('Firebase ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°');
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DOM
saveLog('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DOM');
saveLog('document.readyState', document.readyState);
saveLog('document.title', document.title);

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Scripts ‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î
saveLog('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Scripts');
const scripts = document.querySelectorAll('script');
saveLog('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô scripts', scripts.length);
scripts.forEach((script, index) => {
    if (script.src) {
        saveLog(`Script ${index + 1}`, script.src);
    }
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏ö‡∏ö real-time
window.debugStatus = function() {
    saveLog('DEBUG STATUS: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô');
    saveLog('DEBUG STATUS: URL', window.location.href);
    saveLog('DEBUG STATUS: isRedirecting', window.isRedirecting);
    saveLog('DEBUG STATUS: hasCheckedAuth', window.hasCheckedAuth);
    saveLog('DEBUG STATUS: isProtectingPage', window.isProtectingPage);
    
    const currentUser = sessionStorage.getItem('user') || localStorage.getItem('user');
    if (currentUser) {
        try {
            const user = JSON.parse(currentUser);
            saveLog('DEBUG STATUS: currentUser', user);
        } catch (error) {
            saveLog('DEBUG STATUS: Error parsing user', error.message);
        }
    } else {
        saveLog('DEBUG STATUS: ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ');
    }
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
window.clearDebugStatus = function() {
    saveLog('CLEAR DEBUG STATUS: ‡∏•‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞');
    window.isRedirecting = false;
    window.hasCheckedAuth = false;
    window.isProtectingPage = false;
    saveLog('CLEAR DEBUG STATUS: ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ñ‡∏π‡∏Å‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß');
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö export log ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå
window.exportLogs = function() {
    const logs = JSON.parse(localStorage.getItem('debugLogs') || '[]');
    const logText = logs.map(log => 
        `[${log.timestamp}] ${log.message}: ${JSON.stringify(log.data)}`
    ).join('\n');
    
    const blob = new Blob([logText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `debug-logs-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    saveLog('EXPORT LOGS: ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å log ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß');
};

saveLog('‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
saveLog('‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:');
saveLog('- debugStatus() - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô');
saveLog('- clearDebugStatus() - ‡∏•‡πâ‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞');
saveLog('- showAllLogs() - ‡πÅ‡∏™‡∏î‡∏á log ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
saveLog('- clearAllLogs() - ‡∏•‡πâ‡∏≤‡∏á log ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
saveLog('- exportLogs() - ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å log ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå');
